kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    description: Keeps track of changes in the application image
    openshift.io/generated-by: OpenShiftNewApp
  name: gsproduct5
  namespace: nginx-app
  labels:
    app: nginx-example
    app.kubernetes.io/component: nginx-example
    app.kubernetes.io/instance: nginx-example
    template: nginx-example
spec:
  lookupPolicy:
    local: false
---
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: gsproduct5
  namespace: nginx-app
  labels:
    app: nginx-example
    app.kubernetes.io/component: nginx-example
    app.kubernetes.io/instance: nginx-example
    template: nginx-example
spec:
  output:
    to:
      kind: ImageStreamTag
      name: 'gsproduct5:latest'
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: 'nginx:1.16-el8'
  source:
    type: Git
    git:
      uri: 'https://github.com/kramerro-ibm/web-nginx-test'
  triggers:
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
    - type: GitHub
      github:
        secret: "web-nginx-github-pull-secret"
  runPolicy: Serial
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: gsproduct5
  namespace: nginx-app
  labels:
    app: nginx-example
    app.kubernetes.io/component: nginx-example
    app.kubernetes.io/instance: nginx-example
    template: nginx-example
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - nginx-example
        from:
          kind: ImageStreamTag
          namespace: nginx-app
          name: 'gsproduct5:latest'
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: gsproduct5
  template:
    metadata:
      name: gsproduct5
      creationTimestamp: null
      labels:
        name: gsproduct5
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: nginx-example
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
---
kind: Service
apiVersion: v1
metadata:
  name: gsproduct5
  namespace: nginx-app
  labels:
    app: nginx-example
    app.kubernetes.io/component: nginx-example
    app.kubernetes.io/instance: nginx-example
    template: nginx-example
  annotations:
    description: Exposes and load balances the application pods
    openshift.io/generated-by: OpenShiftNewApp
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: web
      protocol: TCP
      port: 8080
      targetPort: 8080
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    name: gsproduct5
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: gsproduct5
  namespace: nginx-app
  labels:
    app: nginx-example
    app.kubernetes.io/component: nginx-example
    app.kubernetes.io/instance: nginx-example
    template: nginx-example
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    openshift.io/host.generated: 'true'
    template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
spec:
  to:
    kind: Service
    name: gsproduct5
    weight: 100
  wildcardPolicy: None
---
kind: Secret
apiVersion: v1
metadata:
  name: web-nginx-github-pull-secret
  namespace: nginx-app
data:
  WebHookSecretKey: ZGE0NWNiZTZiNjg0MGY2YQ==
type: Opaque

